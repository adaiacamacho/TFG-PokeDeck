@page "/perfil"
@inject HttpClient http;
@inject NavigationManager nav;
@using ModelosBD;
@using Services;
<div class="bg-light">
	<div class="container py-5">
		<div class="row justify-content-center">
			<!-- Profile Header -->
			<div class="col-10 mb-4">
				<div class="profile-header position-relative mb-4">
				</div>
				<div class="text-center">
					<div class="position-relative d-inline-block">
						<img src="@img" class="rounded-circle profile-pic w-50" alt="Profile Picture">
					</div>
					<h3 class="mt-3 mb-1">@nombre @apellido</h3>
				</div>
			</div>
			<!-- Main Content -->
			<div class="col-10">
				<div class="card border-0 shadow-sm">
					<div class="card-body p-0">
						<div class="row g-0" style="justify-content:center">
							<!-- Content Area -->
							<div class="col-lg-9">
								<div class="p-4">
									<!-- Personal Information -->
									<div class="mb-4" style="justify-items:center">
										<h5 class="mb-4">Personal Information</h5>
										<div class="row g-3 row-cols-md-1">
											<div class="col-md-6">
												<label class="form-label">First Name</label>
												<input type="text" class="form-control" @bind=nombre>
											</div>
											<div class="col-md-6">
												<label class="form-label">Last Name</label>
												<input type="text" class="form-control" @bind=apellido>
											</div>
											<div class="col-md">
												<label class="form-label">Email</label>
												<input type="email" class="form-control" @bind=email>
											</div>
											<div class="col-md">
												<label class="form-label">Usuario</label>
												<input type="email" class="form-control" @bind=usuario>
											</div>
											<div class="d-flex gap-2">

												<button type="button" class="btn btn-danger" @onclick=logoff>Cerrar sesión</button>
												<button type="button" class="btn btn-success flex-grow-1" @onclick=guardar>Guardar cambios</button>					
											</div>
										</div>

									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>



@code {
	UsuarioService UsuarioService = new UsuarioService(new HttpClient());
	ImagenPerfilService ImagenService = new ImagenPerfilService(new HttpClient());
	UsuarioDB user = new UsuarioDB();
	string nombre = "";
	string apellido = "";
	string email = "";
	string usuario = "";
	int id = -1;
	string img = "";

	protected override async Task OnInitializedAsync()
	{
		user = await UsuarioService.GetById(int.Parse(AppContext.GetData("logged")!.ToString()!));
		nombre = user.nombre;
		apellido = user.apellido;
		email = user.email;
		usuario = user.usuario1;
		id = user.id;
		var temp = await ImagenService.GetById((int)user.idImagen!);
		img = Metodos.ImagenParse(temp.Imagen!);

	}
	public async Task guardar()
	{
		user.email = email;
		user.nombre = nombre;
		user.apellido = apellido;
		user.usuario1 = usuario;
		user.idImagen = user.idImagen;
		await UsuarioService.Update(id, user);
		await App.Current!.MainPage!.DisplayAlert("Perfil", "Datos actualizados con éxito.", "OK");
		nav.NavigateTo("/perfil", true);
	}
	public void logoff()
	{
		AppContext.SetData("logged", null);
		Metodos.perfil = false;
		App.Current!.MainPage!.DisplayAlert("Logout", "Sesion cerrada con éxito.", "OK");
		nav.NavigateTo("/", true);
	}
}
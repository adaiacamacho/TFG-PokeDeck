@page "/"
@using ModeloCard;
@using ModeloCartas;

<div class="dropdown" style="float:left">
    <select class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        <option value="-1">Tipo</option>
        @if (tipos != null)
        {
            @foreach (string tipo in tipos)
            {
                <option value="@tipo">@tipo</option>
            }
        }
    </select>
</div>

<div class="dropdown" style="float:left;margin-left:30px">
    <select class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        <!--foreach-->
        <option value="-1">Debilidad</option>
        @if (debilidades != null)
        {
            @foreach (string deb in debilidades)
            {
                <option value="@deb">@deb</option>
            }
        }
    </select>
</div>
<div class="dropdown" style="float:left;margin-left:30px">
    <select class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        <option value="-1">Rareza</option>
        @if (rarezas != null)
        {
            @foreach (string rare in rarezas)
            {
                <option value="@rare">@rare</option>
            }
        }
    </select>
</div>

<form class="d-flex" style="float:right;width:300px" role="search">
    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
    <button class="btn btn-outline-success" type="submit">
        <i class="bi bi-search"></i>
    </button>
</form>

<div style="margin-left:30px;float:left">
    <input style="width:90px;height:40px" placeholder="Precio min." /> -
    <input style="width:90px;height:40px" placeholder="Precio max." />
    <button class="btn btn-outline-success" type="submit">Buscar</button>
</div>
<br />
<br />

@if (cartas == null)
{
    <div class="loading-container">
        <div class="spinner-border custom-spinner" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
        <h4 class="loading-text">Cargando cartas...</h4>
    </div>
}
else if (!cartas.data.Any())
{
    <div>
        <h4>No hay cartas.</h4>
    </div>
}
else
{
    <div class="card-mosaic">
        @foreach (var carta in cartas.data)
        {
            <div class="card-item">
                <img src="@carta.images.large" alt="@carta.name" class="card-image" />
                <div class="card-name">@carta.name</div>
            </div>
        }
    </div>
}



<!-- Footer -->
<footer class="py-4 bg-dark text-white">
    <div class="container text-center">
        <p class="mb-0">© 2025 PokeDeck. Todos los derechos reservados.</p>
        <p class="mb-0">
            Síguenos en:
            <a href="#" class="text-white mx-2"><i class="fab fa-facebook-f"></i></a>
            <a href="#" class="text-white mx-2"><i class="fab fa-twitter"></i></a>
            <a href="#" class="text-white mx-2"><i class="fab fa-instagram"></i></a>
            <a href="#" class="text-white mx-2"><i class="fab fa-linkedin-in"></i></a>
        </p>
    </div>
</footer>

@code {
    HttpClient http = new HttpClient();
    Cartas? cartas;
    List<string>? tipos;
    List<string>? rarezas;
    List<string>? debilidades;
    List<string>? deb2 = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        cartas = await http.GetFromJsonAsync<Cartas>(Metodos.GetCartas());
        for (int i = 0; i < cartas!.data.Count(); i++)
        {
            if (cartas.data[i].weaknesses != null)
            {
                deb2!.Add(cartas.data[i].weaknesses[0].type);
            }
        }
        debilidades = (from a in deb2 select a).Distinct().OrderBy(aa => aa).ToList();
        tipos = (from a in cartas.data select a.types[0]).Distinct().OrderBy(x => x).ToList();
        rarezas = (from a in cartas.data select a.rarity).Distinct().OrderBy(x => x).ToList();
    }
}

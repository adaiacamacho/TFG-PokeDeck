@page "/login"
@using ModelosBD;
@using Services;
@using ClaseIdiomas;
@inject LocalizationResourceManager loc;
@inject NavigationManager Navigation;

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-12">
            <div class="login-card">
                <h3 class="text-center mb-4">Iniciar sesión</h3>
                <form id="loginForm">
                    <div class="mb-3">
                        <label for="username" class="form-label">Usuario</label>
                        <input type="text" id="username" class="form-control login-input" @bind=user placeholder="Escribe el usuario" required />
                    </div>
                    <div class="mb-4">
                        <label for="password" class="form-label">Contraseña</label>
                        <input type="password" id="password" class="form-control login-input" @bind=con placeholder="Escribe la contraseña" required />
                    </div>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <NavLink href="registro" class="text-link">¿No tienes cuenta? Regístrate</NavLink>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="login-button me-3" @onclick="login">Login</button>
                    </div>
                    <div id="formFeedback" class="mt-3 text-center"></div>
                </form>
            </div>
        </div>
    </div>
</div>

@code {
    UsuarioService UsuarioService=new UsuarioService(new HttpClient());
    List<UsuarioDB> users=new List<UsuarioDB>();
    string user;
    string con;

    protected override async Task OnInitializedAsync()
    {
        users = await UsuarioService.GetAll();
        loc.OnLanguageChanged += OnLanguageChanged;
    }


    public void login()
    {
        foreach(UsuarioDB item in users)
        {
            if (item.usuario1.Equals(user))
            {
                if (item.contrasena.Equals(con))
                {
                    Metodos.perfil = true;

                    AppContext.SetData("logged",item.id);
                    loc.SetIdioma(item.idIdioma switch
                    {
                        1=>"es",
                        2=>"eu",
                        3=>"en",
                        _=>"es"
                    });         
                    App.Current!.MainPage!.DisplayAlert("Login", "Sesion inciada con éxito.", "OK");
                    Navigation.NavigateTo("/", true);
                    return;
                }
                App.Current!.MainPage!.DisplayAlert("Error", "Contraseña incorrecta.", "OK");
            }
        }
        App.Current!.MainPage!.DisplayAlert("Error", "No existe este usuario.", "OK");
        Metodos.perfil = false;
    }
    private void OnLanguageChanged()
    {
        InvokeAsync(StateHasChanged);
    }
}

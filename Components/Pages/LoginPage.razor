@page "/login"
@using ModelosBD;
@using Services;
@inject NavigationManager Navigation;

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-12">
            <div class="card shadow-lg">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Iniciar sesión</h3>
                    <form id="loginForm">
                        <div class="mb-3">
                            <label for="username" class="form-label">Usuario</label>
                            <input type="text" class="form-control"  id="username"  @bind=user placeholder="Escribe el usuario" required />
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Contraseña</label>
                            <input type="password" class="form-control" id="password" @bind=con placeholder="Escribe la contraseña" required />
                        </div>
                        <div class="text-center">
                            <NavLink href="registro" Match="NavLinkMatch.All">
                                <button type="submit" class="btn btn-primary btn-lg">Registro</button>
                            </NavLink>
                            <button type="submit" class="btn btn-primary btn-lg" @onclick="login">Login</button>
                            <div id="formFeedback" class="mt-3"></div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    UsuarioService UsuarioService=new UsuarioService(new HttpClient());
    List<UsuarioDB> users=new List<UsuarioDB>();
    string user;
    string con;

    protected override async Task OnInitializedAsync()
    {
        users = await UsuarioService.GetAll();
    }


    public void login()
    {
        foreach(UsuarioDB item in users)
        {
            if (item.usuario1.Equals(user))
            {
                if (item.contrasena.Equals(con))
                {
                    Metodos.perfil = true;
                    App.Current!.MainPage!.DisplayAlert("Login", "Sesion inciada con éxito.", "OK");
                    Navigation.NavigateTo("/", true);
                    return;
                }
                App.Current!.MainPage!.DisplayAlert("Error", "Contraseña incorrecta.", "OK");
            }
        }
        App.Current!.MainPage!.DisplayAlert("Error", "No existe este usuario.", "OK");
        Metodos.perfil = false;
    }
}

@page "/registro"
@inject NavigationManager nav;
@using ClaseIdiomas;
@inject LocalizationResourceManager loc;
@using ModelosBD;
@using Services;

<div class="container mt-5">
	<div class="row justify-content-center">
		<div class="col-lg-10 col-md-12 col-sm-12">
			<div class="registro-card">
				<h3 class="text-center mb-4">Registrarse</h3>
				<form id="registrationForm">
					<div class="mb-3">
						<label for="name" class="form-label">Nombre</label>
						<input type="text" id="name" class="form-control registro-input" @bind=nombre placeholder="Escribe tu nombre" required />
					</div>
					<div class="mb-3">
						<label for="apellido" class="form-label">Apellido</label>
						<input type="text" id="apellido" class="form-control registro-input" @bind=ape placeholder="Escribe tu apellido" required />
					</div>
					<div class="mb-3">
						<label for="email" class="form-label">Email</label>
						<input type="email" id="email" class="form-control registro-input" @bind=email placeholder="Escribe tu email" required />
					</div>
					<div class="mb-3">
						<label for="usuario" class="form-label">Usuario</label>
						<input type="text" id="usuario" class="form-control registro-input" @bind=user placeholder="Escribe un usuario" required />
					</div>
					<div class="mb-3">
						<label for="contrasena" class="form-label">Contraseña</label>
						<input type="password" id="contrasena" class="form-control registro-input" @bind=con placeholder="Escribe una contraseña" required />
					</div>
					<div class="mb-4">
						<label class="form-label">@loc["lang"]</label>
						<select class="form-select registro-select" @bind=idioma>
							<option value="1">Español</option>
							<option value="2">Euskera</option>
							<option value="3">English</option>
						</select>
					</div>
					<div class="text-center">
						<button type="submit" class="registro-button" @onclick="registrarse">Registrarse</button>
						<div id="formFeedback" class="mt-3"></div>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>

@code {
	UsuarioService UsuarioService = new UsuarioService(new HttpClient());
	string nombre;
	string ape;
	string email;
	string user;
	string con;
	int random;
	int idioma = 1;


	public async Task registrarse()
	{
		if (string.IsNullOrWhiteSpace(nombre) || string.IsNullOrWhiteSpace(ape) || string.IsNullOrWhiteSpace(email) || string.IsNullOrWhiteSpace(user) || string.IsNullOrWhiteSpace(con))
		{
			await App.Current!.MainPage!.DisplayAlert("Error", "Datos incompletos.", "OK");
			return;
		}
		else
		{
			var list = await UsuarioService.GetAll();
			var ult = list.OrderBy(x => x.id).Last();
			random = new Random().Next(1, 39);
			UsuarioDB temp = new UsuarioDB();
			temp.usuario1 = user;
			temp.contrasena = con;
			temp.nombre = nombre;
			temp.apellido = ape;
			temp.email = email;
			temp.idIdioma = 1;
			temp.idImagen = random;
			temp.id = (ult.id + 1);
			var que = await UsuarioService.Add(temp);
			await App.Current!.MainPage!.DisplayAlert("Registro", "Usuario registrado con éxito.", "OK");
			nav.NavigateTo("/", true);

		}
	}
}
